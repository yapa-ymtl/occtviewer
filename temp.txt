void MyGLWidget::showEvent(QShowEvent* event)
{
    QOpenGLWidget::showEvent(event);

#ifdef Q_OS_LINUX
    using namespace QNativeInterface;

    if (!m_view.IsNull() && m_view->Window().IsNull())
    {
        auto *x11App = qGuiApp->nativeInterface<QX11Application>();
        if (x11App)
        {
            Display* display = x11App->display();
            Window win = static_cast<Window>(this->winId());

            Handle(Aspect_DisplayConnection) displayConnection = new Aspect_DisplayConnection(display);
            Handle(Xw_Window) occtWindow = new Xw_Window(
                displayConnection,
                win,
                this->x(), this->y(), this->width(), this->height()
            );

            if (!occtWindow->IsMapped())
                occtWindow->Map();

            m_view->SetWindow(occtWindow);
            m_view->MustBeResized();
            m_view->FitAll();
        }
        else
        {
            qWarning() << "X11 native interface not available.";
        }
    }


-------------
find_package(X11 REQUIRED)
target_link_libraries(OCCTViewer PRIVATE ${X11_LIBRARIES})
include_directories(${X11_INCLUDE_DIR})


    if (!m_view.IsNull())
        m_view->Redraw();
#endif
}
