cmake_minimum_required(VERSION 3.16)

project(OCCTViewer VERSION 0.1 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)

# Find Qt
find_package(Qt6 REQUIRED COMPONENTS Core Widgets OpenGL)

# Find OpenCASCADE
find_package(OpenCASCADE REQUIRED COMPONENTS
    FoundationClasses
    ModelingData
    ModelingAlgorithms
    Visualization
)

# Source files
set(PROJECT_SOURCES
    main.cpp
    mainwindow.cpp
    mainwindow.h
    mainwindow.ui
    myglwidget.cpp
    myglwidget.h
)

qt_add_executable(${PROJECT_NAME}
    ${PROJECT_SOURCES}
)

# Include OpenCASCADE headers
target_include_directories(${PROJECT_NAME} PRIVATE ${OpenCASCADE_INCLUDE_DIRS})

# Link against Qt and OCCT libraries
target_link_libraries(${PROJECT_NAME}
    PRIVATE
    Qt6::Core
    Qt6::Widgets
    Qt6::OpenGL

    OpenCASCADE::TKBRep
    OpenCASCADE::TKBool
    OpenCASCADE::TKG3d
    OpenCASCADE::TKG2d
    OpenCASCADE::TKMath
    OpenCASCADE::TKService
    OpenCASCADE::TKTopAlgo
    OpenCASCADE::TKernel
    OpenCASCADE::TKGeomBase
    OpenCASCADE::TKGeomAlgo
    OpenCASCADE::TKOpenGl
    OpenCASCADE::TKV3d
    OpenCASCADE::TKShHealing
)

# Optional: Bundle settings for macOS
set_target_properties(${PROJECT_NAME} PROPERTIES
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)
